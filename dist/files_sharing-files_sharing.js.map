{"version":3,"file":"files_sharing-files_sharing.js?v=263dfad6e9c546a5a60b","mappings":"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","sources":["webpack:///nextcloud/webpack/runtime/chunk loaded","webpack:///nextcloud/node_modules/@nextcloud/files/dist/index.mjs","webpack:///nextcloud/apps/files_sharing/src/services/logger.ts","webpack:///nextcloud/apps/files_sharing/src/services/SharingService.ts","webpack:///nextcloud/apps/files/src/services/FileAction.ts","webpack:///nextcloud/apps/files_sharing/src/views/shares.ts","webpack:///nextcloud/apps/files/src/logger.js","webpack:///nextcloud/apps/files_sharing/src/actions/acceptShareAction.ts","webpack:///nextcloud/apps/files_sharing/src/actions/openInFilesAction.ts","webpack:///nextcloud/apps/files_sharing/src/actions/rejectShareAction.ts","webpack:///nextcloud/apps/files_sharing/src/actions/restoreShareAction.ts","webpack:///nextcloud/webpack/bootstrap","webpack:///nextcloud/webpack/runtime/compat get default export","webpack:///nextcloud/webpack/runtime/define property getters","webpack:///nextcloud/webpack/runtime/global","webpack:///nextcloud/webpack/runtime/hasOwnProperty shorthand","webpack:///nextcloud/webpack/runtime/make namespace object","webpack:///nextcloud/webpack/runtime/node module decorator","webpack:///nextcloud/webpack/runtime/runtimeId","webpack:///nextcloud/webpack/runtime/jsonp chunk loading","webpack:///nextcloud/webpack/runtime/nonce","webpack:///nextcloud/webpack/startup"],"sourcesContent":["var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","import { getCurrentUser as c, getRequestToken as x } from \"@nextcloud/auth\";\nimport { getLoggerBuilder as m } from \"@nextcloud/logger\";\nimport { getCanonicalLocale as N } from \"@nextcloud/l10n\";\nimport { join as R, basename as A, extname as F, dirname as d } from \"path\";\nimport { generateRemoteUrl as g } from \"@nextcloud/router\";\nimport { createClient as S, getPatcher as $ } from \"webdav\";\nimport { request as P } from \"webdav/dist/node/request.js\";\nconst B = (e) => e === null ? m().setApp(\"files\").build() : m().setApp(\"files\").setUid(e.uid).build(), a = B(c());\nclass L {\n  _entries = [];\n  registerEntry(t) {\n    this.validateEntry(t), this._entries.push(t);\n  }\n  unregisterEntry(t) {\n    const r = typeof t == \"string\" ? this.getEntryIndex(t) : this.getEntryIndex(t.id);\n    if (r === -1) {\n      a.warn(\"Entry not found, nothing removed\", { entry: t, entries: this.getEntries() });\n      return;\n    }\n    this._entries.splice(r, 1);\n  }\n  getEntries(t) {\n    return t ? this._entries.filter((r) => typeof r.if == \"function\" ? r.if(t) : !0) : this._entries;\n  }\n  getEntryIndex(t) {\n    return this._entries.findIndex((r) => r.id === t);\n  }\n  validateEntry(t) {\n    if (!t.id || !t.displayName || !(t.iconSvgInline || t.iconClass))\n      throw new Error(\"Invalid entry\");\n    if (typeof t.id != \"string\" || typeof t.displayName != \"string\")\n      throw new Error(\"Invalid id or displayName property\");\n    if (t.iconClass && typeof t.iconClass != \"string\" || t.iconSvgInline && typeof t.iconSvgInline != \"string\")\n      throw new Error(\"Invalid icon provided\");\n    if (t.if !== void 0 && typeof t.if != \"function\")\n      throw new Error(\"Invalid if property\");\n    if (t.templateName && typeof t.templateName != \"string\")\n      throw new Error(\"Invalid templateName property\");\n    if (t.handler && typeof t.handler != \"function\")\n      throw new Error(\"Invalid handler property\");\n    if (!t.templateName && !t.handler)\n      throw new Error(\"At least a templateName or a handler must be provided\");\n    if (this.getEntryIndex(t.id) !== -1)\n      throw new Error(\"Duplicate entry\");\n  }\n}\nconst p = function() {\n  return typeof window._nc_newfilemenu > \"u\" && (window._nc_newfilemenu = new L(), a.debug(\"NewFileMenu initialized\")), window._nc_newfilemenu;\n}, l = [\"B\", \"KB\", \"MB\", \"GB\", \"TB\", \"PB\"], u = [\"B\", \"KiB\", \"MiB\", \"GiB\", \"TiB\", \"PiB\"];\nfunction J(e, t = !1, r = !1) {\n  typeof e == \"string\" && (e = Number(e));\n  let n = e > 0 ? Math.floor(Math.log(e) / Math.log(r ? 1024 : 1e3)) : 0;\n  n = Math.min((r ? u.length : l.length) - 1, n);\n  const s = r ? u[n] : l[n];\n  let i = (e / Math.pow(r ? 1024 : 1e3, n)).toFixed(1);\n  return t === !0 && n === 0 ? (i !== \"0.0\" ? \"< 1 \" : \"0 \") + (r ? u[1] : l[1]) : (n < 2 ? i = parseFloat(i).toFixed(0) : i = parseFloat(i).toLocaleString(N()), i + \" \" + s);\n}\nclass Q {\n  _action;\n  constructor(t) {\n    this.validateAction(t), this._action = t;\n  }\n  get id() {\n    return this._action.id;\n  }\n  get displayName() {\n    return this._action.displayName;\n  }\n  get iconSvgInline() {\n    return this._action.iconSvgInline;\n  }\n  get enabled() {\n    return this._action.enabled;\n  }\n  get exec() {\n    return this._action.exec;\n  }\n  get execBatch() {\n    return this._action.execBatch;\n  }\n  get order() {\n    return this._action.order;\n  }\n  get default() {\n    return this._action.default;\n  }\n  get inline() {\n    return this._action.inline;\n  }\n  get renderInline() {\n    return this._action.renderInline;\n  }\n  validateAction(t) {\n    if (!t.id || typeof t.id != \"string\")\n      throw new Error(\"Invalid id\");\n    if (!t.displayName || typeof t.displayName != \"function\")\n      throw new Error(\"Invalid displayName function\");\n    if (!t.iconSvgInline || typeof t.iconSvgInline != \"function\")\n      throw new Error(\"Invalid iconSvgInline function\");\n    if (!t.exec || typeof t.exec != \"function\")\n      throw new Error(\"Invalid exec function\");\n    if (\"enabled\" in t && typeof t.enabled != \"function\")\n      throw new Error(\"Invalid enabled function\");\n    if (\"execBatch\" in t && typeof t.execBatch != \"function\")\n      throw new Error(\"Invalid execBatch function\");\n    if (\"order\" in t && typeof t.order != \"number\")\n      throw new Error(\"Invalid order\");\n    if (\"default\" in t && typeof t.default != \"boolean\")\n      throw new Error(\"Invalid default\");\n    if (\"inline\" in t && typeof t.inline != \"function\")\n      throw new Error(\"Invalid inline function\");\n    if (\"renderInline\" in t && typeof t.renderInline != \"function\")\n      throw new Error(\"Invalid renderInline function\");\n  }\n}\nconst X = function(e) {\n  if (typeof window._nc_fileactions > \"u\" && (window._nc_fileactions = [], a.debug(\"FileActions initialized\")), window._nc_fileactions.find((t) => t.id === e.id)) {\n    a.error(`FileAction ${e.id} already registered`, { action: e });\n    return;\n  }\n  window._nc_fileactions.push(e);\n}, Y = function() {\n  return window._nc_fileactions || [];\n};\nclass Z {\n  _header;\n  constructor(t) {\n    this.validateHeader(t), this._header = t;\n  }\n  get id() {\n    return this._header.id;\n  }\n  get order() {\n    return this._header.order;\n  }\n  get enabled() {\n    return this._header.enabled;\n  }\n  get render() {\n    return this._header.render;\n  }\n  get updated() {\n    return this._header.updated;\n  }\n  validateHeader(t) {\n    if (!t.id || !t.render || !t.updated)\n      throw new Error(\"Invalid header: id, render and updated are required\");\n    if (typeof t.id != \"string\")\n      throw new Error(\"Invalid id property\");\n    if (t.enabled !== void 0 && typeof t.enabled != \"function\")\n      throw new Error(\"Invalid enabled property\");\n    if (t.render && typeof t.render != \"function\")\n      throw new Error(\"Invalid render property\");\n    if (t.updated && typeof t.updated != \"function\")\n      throw new Error(\"Invalid updated property\");\n  }\n}\nconst ee = function(e) {\n  if (typeof window._nc_filelistheader > \"u\" && (window._nc_filelistheader = [], a.debug(\"FileActions initialized\")), window._nc_filelistheader.find((t) => t.id === e.id)) {\n    a.error(`Header ${e.id} already registered`, { header: e });\n    return;\n  }\n  window._nc_filelistheader.push(e);\n}, te = function() {\n  return window._nc_filelistheader || [];\n};\nvar o = ((e) => (e[e.NONE = 0] = \"NONE\", e[e.CREATE = 4] = \"CREATE\", e[e.READ = 1] = \"READ\", e[e.UPDATE = 2] = \"UPDATE\", e[e.DELETE = 8] = \"DELETE\", e[e.SHARE = 16] = \"SHARE\", e[e.ALL = 31] = \"ALL\", e))(o || {});\nconst _ = [\"d:getcontentlength\", \"d:getcontenttype\", \"d:getetag\", \"d:getlastmodified\", \"d:quota-available-bytes\", \"d:resourcetype\", \"nc:has-preview\", \"nc:is-encrypted\", \"nc:mount-type\", \"nc:share-attributes\", \"oc:comments-unread\", \"oc:favorite\", \"oc:fileid\", \"oc:owner-display-name\", \"oc:owner-id\", \"oc:permissions\", \"oc:share-types\", \"oc:size\", \"ocs:share-permissions\"], y = { d: \"DAV:\", nc: \"http://nextcloud.org/ns\", oc: \"http://owncloud.org/ns\", ocs: \"http://open-collaboration-services.org/ns\" }, re = function(e, t = { nc: \"http://nextcloud.org/ns\" }) {\n  typeof window._nc_dav_properties > \"u\" && (window._nc_dav_properties = [..._], window._nc_dav_namespaces = { ...y });\n  const r = { ...window._nc_dav_namespaces, ...t };\n  if (window._nc_dav_properties.find((s) => s === e))\n    return a.error(`${e} already registered`, { prop: e }), !1;\n  if (e.startsWith(\"<\") || e.split(\":\").length !== 2)\n    return a.error(`${e} is not valid. See example: 'oc:fileid'`, { prop: e }), !1;\n  const n = e.split(\":\")[0];\n  return r[n] ? (window._nc_dav_properties.push(e), window._nc_dav_namespaces = r, !0) : (a.error(`${e} namespace unknown`, { prop: e, namespaces: r }), !1);\n}, h = function() {\n  return typeof window._nc_dav_properties > \"u\" && (window._nc_dav_properties = [..._]), window._nc_dav_properties.map((e) => `<${e} />`).join(\" \");\n}, f = function() {\n  return typeof window._nc_dav_namespaces > \"u\" && (window._nc_dav_namespaces = { ...y }), Object.keys(window._nc_dav_namespaces).map((e) => `xmlns:${e}=\"${window._nc_dav_namespaces?.[e]}\"`).join(\" \");\n}, M = function() {\n  return `<?xml version=\"1.0\"?>\n\t\t<d:propfind ${f()}>\n\t\t\t<d:prop>\n\t\t\t\t${h()}\n\t\t\t</d:prop>\n\t\t</d:propfind>`;\n}, T = function() {\n  return `<?xml version=\"1.0\"?>\n\t\t<oc:filter-files ${f()}>\n\t\t\t<d:prop>\n\t\t\t\t${h()}\n\t\t\t</d:prop>\n\t\t\t<oc:filter-rules>\n\t\t\t\t<oc:favorite>1</oc:favorite>\n\t\t\t</oc:filter-rules>\n\t\t</oc:filter-files>`;\n}, ie = function(e) {\n  return `<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<d:searchrequest ${f()}\n\txmlns:ns=\"https://github.com/icewind1991/SearchDAV/ns\">\n\t<d:basicsearch>\n\t\t<d:select>\n\t\t\t<d:prop>\n\t\t\t\t${h()}\n\t\t\t</d:prop>\n\t\t</d:select>\n\t\t<d:from>\n\t\t\t<d:scope>\n\t\t\t\t<d:href>/files/${c()?.uid}/</d:href>\n\t\t\t\t<d:depth>infinity</d:depth>\n\t\t\t</d:scope>\n\t\t</d:from>\n\t\t<d:where>\n\t\t\t<d:and>\n\t\t\t\t<d:or>\n\t\t\t\t\t<d:not>\n\t\t\t\t\t\t<d:eq>\n\t\t\t\t\t\t\t<d:prop>\n\t\t\t\t\t\t\t\t<d:getcontenttype/>\n\t\t\t\t\t\t\t</d:prop>\n\t\t\t\t\t\t\t<d:literal>httpd/unix-directory</d:literal>\n\t\t\t\t\t\t</d:eq>\n\t\t\t\t\t</d:not>\n\t\t\t\t\t<d:eq>\n\t\t\t\t\t\t<d:prop>\n\t\t\t\t\t\t\t<oc:size/>\n\t\t\t\t\t\t</d:prop>\n\t\t\t\t\t\t<d:literal>0</d:literal>\n\t\t\t\t\t</d:eq>\n\t\t\t\t</d:or>\n\t\t\t\t<d:gt>\n\t\t\t\t\t<d:prop>\n\t\t\t\t\t\t<d:getlastmodified/>\n\t\t\t\t\t</d:prop>\n\t\t\t\t\t<d:literal>${e}</d:literal>\n\t\t\t\t</d:gt>\n\t\t\t</d:and>\n\t\t</d:where>\n\t\t<d:orderby>\n\t\t\t<d:order>\n\t\t\t\t<d:prop>\n\t\t\t\t\t<d:getlastmodified/>\n\t\t\t\t</d:prop>\n\t\t\t\t<d:descending/>\n\t\t\t</d:order>\n\t\t</d:orderby>\n\t\t<d:limit>\n\t\t\t<d:nresults>100</d:nresults>\n\t\t\t<ns:firstresult>0</ns:firstresult>\n\t\t</d:limit>\n\t</d:basicsearch>\n</d:searchrequest>`;\n}, z = function(e = \"\") {\n  let t = o.NONE;\n  return e && ((e.includes(\"C\") || e.includes(\"K\")) && (t |= o.CREATE), e.includes(\"G\") && (t |= o.READ), (e.includes(\"W\") || e.includes(\"N\") || e.includes(\"V\")) && (t |= o.UPDATE), e.includes(\"D\") && (t |= o.DELETE), e.includes(\"R\") && (t |= o.SHARE)), t;\n};\nvar w = ((e) => (e.Folder = \"folder\", e.File = \"file\", e))(w || {});\nconst E = function(e, t) {\n  return e.match(t) !== null;\n}, v = (e, t) => {\n  if (e.id && typeof e.id != \"number\")\n    throw new Error(\"Invalid id type of value\");\n  if (!e.source)\n    throw new Error(\"Missing mandatory source\");\n  try {\n    new URL(e.source);\n  } catch {\n    throw new Error(\"Invalid source format, source must be a valid URL\");\n  }\n  if (!e.source.startsWith(\"http\"))\n    throw new Error(\"Invalid source format, only http(s) is supported\");\n  if (e.mtime && !(e.mtime instanceof Date))\n    throw new Error(\"Invalid mtime type\");\n  if (e.crtime && !(e.crtime instanceof Date))\n    throw new Error(\"Invalid crtime type\");\n  if (!e.mime || typeof e.mime != \"string\" || !e.mime.match(/^[-\\w.]+\\/[-+\\w.]+$/gi))\n    throw new Error(\"Missing or invalid mandatory mime\");\n  if (\"size\" in e && typeof e.size != \"number\" && e.size !== void 0)\n    throw new Error(\"Invalid size type\");\n  if (\"permissions\" in e && e.permissions !== void 0 && !(typeof e.permissions == \"number\" && e.permissions >= o.NONE && e.permissions <= o.ALL))\n    throw new Error(\"Invalid permissions\");\n  if (e.owner && e.owner !== null && typeof e.owner != \"string\")\n    throw new Error(\"Invalid owner type\");\n  if (e.attributes && typeof e.attributes != \"object\")\n    throw new Error(\"Invalid attributes type\");\n  if (e.root && typeof e.root != \"string\")\n    throw new Error(\"Invalid root type\");\n  if (e.root && !e.root.startsWith(\"/\"))\n    throw new Error(\"Root must start with a leading slash\");\n  if (e.root && !e.source.includes(e.root))\n    throw new Error(\"Root must be part of the source\");\n  if (e.root && E(e.source, t)) {\n    const r = e.source.match(t)[0];\n    if (!e.source.includes(R(r, e.root)))\n      throw new Error(\"The root must be relative to the service. e.g /files/emma\");\n  }\n};\nclass b {\n  _data;\n  _attributes;\n  _knownDavService = /(remote|public)\\.php\\/(web)?dav/i;\n  constructor(t, r) {\n    v(t, r || this._knownDavService), this._data = t;\n    const n = { set: (s, i, D) => (this.updateMtime(), Reflect.set(s, i, D)), deleteProperty: (s, i) => (this.updateMtime(), Reflect.deleteProperty(s, i)) };\n    this._attributes = new Proxy(t.attributes || {}, n), delete this._data.attributes, r && (this._knownDavService = r);\n  }\n  get source() {\n    return this._data.source.replace(/\\/$/i, \"\");\n  }\n  get basename() {\n    return A(this.source);\n  }\n  get extension() {\n    return F(this.source);\n  }\n  get dirname() {\n    if (this.root) {\n      const r = this.source.indexOf(this.root);\n      return d(this.source.slice(r + this.root.length) || \"/\");\n    }\n    const t = new URL(this.source);\n    return d(t.pathname);\n  }\n  get mime() {\n    return this._data.mime;\n  }\n  get mtime() {\n    return this._data.mtime;\n  }\n  get crtime() {\n    return this._data.crtime;\n  }\n  get size() {\n    return this._data.size;\n  }\n  get attributes() {\n    return this._attributes;\n  }\n  get permissions() {\n    return this.owner === null && !this.isDavRessource ? o.READ : this._data.permissions !== void 0 ? this._data.permissions : o.NONE;\n  }\n  get owner() {\n    return this.isDavRessource ? this._data.owner : null;\n  }\n  get isDavRessource() {\n    return E(this.source, this._knownDavService);\n  }\n  get root() {\n    return this._data.root ? this._data.root.replace(/^(.+)\\/$/, \"$1\") : this.isDavRessource && d(this.source).split(this._knownDavService).pop() || null;\n  }\n  get path() {\n    if (this.root) {\n      const t = this.source.indexOf(this.root);\n      return this.source.slice(t + this.root.length) || \"/\";\n    }\n    return (this.dirname + \"/\" + this.basename).replace(/\\/\\//g, \"/\");\n  }\n  get fileid() {\n    return this._data?.id || this.attributes?.fileid;\n  }\n  move(t) {\n    v({ ...this._data, source: t }, this._knownDavService), this._data.source = t, this.updateMtime();\n  }\n  rename(t) {\n    if (t.includes(\"/\"))\n      throw new Error(\"Invalid basename\");\n    this.move(d(this.source) + \"/\" + t);\n  }\n  updateMtime() {\n    this._data.mtime && (this._data.mtime = /* @__PURE__ */ new Date());\n  }\n}\nclass q extends b {\n  get type() {\n    return w.File;\n  }\n}\nclass C extends b {\n  constructor(t) {\n    super({ ...t, mime: \"httpd/unix-directory\" });\n  }\n  get type() {\n    return w.Folder;\n  }\n  get extension() {\n    return null;\n  }\n  get mime() {\n    return \"httpd/unix-directory\";\n  }\n}\nconst I = `/files/${c()?.uid}`, U = g(\"dav\" + I), ne = function(e = U) {\n  const t = S(e, { headers: { requesttoken: x() || \"\" } });\n  return $().patch(\"request\", (r) => (r.headers?.method && (r.method = r.headers.method, delete r.headers.method), P(r))), t;\n}, oe = async (e, t = \"/\") => (await e.getDirectoryContents(t, { details: !0, data: t === \"/\" ? T() : M(), headers: { method: t === \"/\" ? \"REPORT\" : \"PROPFIND\" }, includeSelf: !0 })).data.filter((r) => r.filename !== t).map((r) => k(r)), k = function(e, t = I) {\n  const r = e.props, n = z(r?.permissions), s = c()?.uid, i = { id: r?.fileid || 0, source: g(`dav${t}${e.filename}`), mtime: new Date(Date.parse(e.lastmod)), mime: e.mime, size: r?.size || 0, permissions: n, owner: s, root: t, attributes: { ...e, ...r, hasPreview: r?.[\"has-preview\"] } };\n  return delete i.attributes?.props, e.type === \"file\" ? new q(i) : new C(i);\n}, se = function(e) {\n  return p().registerEntry(e);\n}, ae = function(e) {\n  return p().unregisterEntry(e);\n}, de = function(e) {\n  return p().getEntries(e);\n};\nexport {\n  q as File,\n  Q as FileAction,\n  w as FileType,\n  C as Folder,\n  Z as Header,\n  b as Node,\n  o as Permission,\n  se as addNewFileMenuEntry,\n  U as davDefaultRootUrl,\n  ne as davGetClient,\n  M as davGetDefaultPropfind,\n  T as davGetFavoritesReport,\n  ie as davGetRecentSearch,\n  z as davParsePermissions,\n  k as davResultToNode,\n  I as davRootPath,\n  y as defaultDavNamespaces,\n  _ as defaultDavProperties,\n  J as formatFileSize,\n  f as getDavNameSpaces,\n  h as getDavProperties,\n  oe as getFavoriteNodes,\n  Y as getFileActions,\n  te as getFileListHeaders,\n  de as getNewFileMenuEntries,\n  re as registerDavProperty,\n  X as registerFileAction,\n  ee as registerFileListHeaders,\n  ae as removeNewFileMenuEntry\n};\n","/**\n * @copyright Copyright (c) 2022 John Molakvoæ <skjnldsv@protonmail.com>\n *\n * @author John Molakvoæ <skjnldsv@protonmail.com>\n *\n * @license AGPL-3.0-or-later\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n *\n */\nimport { getLoggerBuilder } from '@nextcloud/logger';\nexport default getLoggerBuilder()\n    .setApp('files_sharing')\n    .detectUser()\n    .build();\n","import { Folder, File } from '@nextcloud/files';\nimport { generateOcsUrl, generateRemoteUrl, generateUrl } from '@nextcloud/router';\nimport { getCurrentUser } from '@nextcloud/auth';\nimport axios from '@nextcloud/axios';\nimport logger from './logger';\nexport const rootPath = `/files/${getCurrentUser()?.uid}`;\nconst headers = {\n    'Content-Type': 'application/json',\n};\nconst ocsEntryToNode = function (ocsEntry) {\n    try {\n        const isFolder = ocsEntry?.item_type === 'folder';\n        const hasPreview = ocsEntry?.has_preview === true;\n        const Node = isFolder ? Folder : File;\n        const fileid = ocsEntry.file_source;\n        // Generate path and strip double slashes\n        const path = ocsEntry?.path || ocsEntry.file_target;\n        const source = generateRemoteUrl(`dav/${rootPath}/${path}`.replaceAll(/\\/\\//gm, '/'));\n        // Prefer share time if more recent than item mtime\n        let mtime = ocsEntry?.item_mtime ? new Date((ocsEntry.item_mtime) * 1000) : undefined;\n        if (ocsEntry?.stime > (ocsEntry?.item_mtime || 0)) {\n            mtime = new Date((ocsEntry.stime) * 1000);\n        }\n        return new Node({\n            id: fileid,\n            source,\n            owner: ocsEntry?.uid_owner,\n            mime: ocsEntry?.mimetype,\n            mtime,\n            size: ocsEntry?.item_size,\n            permissions: ocsEntry?.item_permissions || ocsEntry?.permissions,\n            root: rootPath,\n            attributes: {\n                ...ocsEntry,\n                'has-preview': hasPreview,\n                favorite: ocsEntry?.tags?.includes(window.OC.TAG_FAVORITE) ? 1 : 0,\n            },\n        });\n    }\n    catch (error) {\n        logger.error('Error while parsing OCS entry', { error });\n        return null;\n    }\n};\nconst getShares = function (shared_with_me = false) {\n    const url = generateOcsUrl('apps/files_sharing/api/v1/shares');\n    return axios.get(url, {\n        headers,\n        params: {\n            shared_with_me,\n            include_tags: true,\n        },\n    });\n};\nconst getSharedWithYou = function () {\n    return getShares(true);\n};\nconst getSharedWithOthers = function () {\n    return getShares();\n};\nconst getRemoteShares = function () {\n    const url = generateOcsUrl('apps/files_sharing/api/v1/remote_shares');\n    return axios.get(url, {\n        headers,\n        params: {\n            include_tags: true,\n        },\n    });\n};\nconst getPendingShares = function () {\n    const url = generateOcsUrl('apps/files_sharing/api/v1/shares/pending');\n    return axios.get(url, {\n        headers,\n        params: {\n            include_tags: true,\n        },\n    });\n};\nconst getRemotePendingShares = function () {\n    const url = generateOcsUrl('apps/files_sharing/api/v1/remote_shares/pending');\n    return axios.get(url, {\n        headers,\n        params: {\n            include_tags: true,\n        },\n    });\n};\nconst getDeletedShares = function () {\n    const url = generateOcsUrl('apps/files_sharing/api/v1/deletedshares');\n    return axios.get(url, {\n        headers,\n        params: {\n            include_tags: true,\n        },\n    });\n};\nexport const getContents = async (sharedWithYou = true, sharedWithOthers = true, pendingShares = false, deletedshares = false, filterTypes = []) => {\n    const promises = [];\n    if (sharedWithYou) {\n        promises.push(getSharedWithYou(), getRemoteShares());\n    }\n    if (sharedWithOthers) {\n        promises.push(getSharedWithOthers());\n    }\n    if (pendingShares) {\n        promises.push(getPendingShares(), getRemotePendingShares());\n    }\n    if (deletedshares) {\n        promises.push(getDeletedShares());\n    }\n    const responses = await Promise.all(promises);\n    const data = responses.map((response) => response.data.ocs.data).flat();\n    let contents = data.map(ocsEntryToNode).filter((node) => node !== null);\n    if (filterTypes.length > 0) {\n        contents = contents.filter((node) => filterTypes.includes(node.attributes?.share_type));\n    }\n    return {\n        folder: new Folder({\n            id: 0,\n            source: generateRemoteUrl('dav' + rootPath),\n            owner: getCurrentUser()?.uid || null,\n        }),\n        contents,\n    };\n};\n","/**\n * @copyright Copyright (c) 2023 John Molakvoæ <skjnldsv@protonmail.com>\n *\n * @author John Molakvoæ <skjnldsv@protonmail.com>\n *\n * @license AGPL-3.0-or-later\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n *\n */\nimport logger from '../logger';\nexport var DefaultType;\n(function (DefaultType) {\n    DefaultType[\"DEFAULT\"] = \"default\";\n    DefaultType[\"HIDDEN\"] = \"hidden\";\n})(DefaultType || (DefaultType = {}));\nexport class FileAction {\n    _action;\n    constructor(action) {\n        this.validateAction(action);\n        this._action = action;\n    }\n    get id() {\n        return this._action.id;\n    }\n    get displayName() {\n        return this._action.displayName;\n    }\n    get iconSvgInline() {\n        return this._action.iconSvgInline;\n    }\n    get enabled() {\n        return this._action.enabled;\n    }\n    get exec() {\n        return this._action.exec;\n    }\n    get execBatch() {\n        return this._action.execBatch;\n    }\n    get order() {\n        return this._action.order;\n    }\n    get default() {\n        return this._action.default;\n    }\n    get inline() {\n        return this._action.inline;\n    }\n    get renderInline() {\n        return this._action.renderInline;\n    }\n    validateAction(action) {\n        if (!action.id || typeof action.id !== 'string') {\n            throw new Error('Invalid id');\n        }\n        if (!action.displayName || typeof action.displayName !== 'function') {\n            throw new Error('Invalid displayName function');\n        }\n        if (!action.iconSvgInline || typeof action.iconSvgInline !== 'function') {\n            throw new Error('Invalid iconSvgInline function');\n        }\n        if (!action.exec || typeof action.exec !== 'function') {\n            throw new Error('Invalid exec function');\n        }\n        // Optional properties --------------------------------------------\n        if ('enabled' in action && typeof action.enabled !== 'function') {\n            throw new Error('Invalid enabled function');\n        }\n        if ('execBatch' in action && typeof action.execBatch !== 'function') {\n            throw new Error('Invalid execBatch function');\n        }\n        if ('order' in action && typeof action.order !== 'number') {\n            throw new Error('Invalid order');\n        }\n        if (action.default && !Object.values(DefaultType).includes(action.default)) {\n            throw new Error('Invalid default');\n        }\n        if ('inline' in action && typeof action.inline !== 'function') {\n            throw new Error('Invalid inline function');\n        }\n        if ('renderInline' in action && typeof action.renderInline !== 'function') {\n            throw new Error('Invalid renderInline function');\n        }\n    }\n}\nexport const registerFileAction = function (action) {\n    if (typeof window._nc_fileactions === 'undefined') {\n        window._nc_fileactions = [];\n        logger.debug('FileActions initialized');\n    }\n    // Check duplicates\n    if (window._nc_fileactions.find(search => search.id === action.id)) {\n        logger.error(`FileAction ${action.id} already registered`, { action });\n        return;\n    }\n    window._nc_fileactions.push(action);\n};\nexport const getFileActions = function () {\n    return window._nc_fileactions || [];\n};\n","import { translate as t } from '@nextcloud/l10n';\nimport AccountClockSvg from '@mdi/svg/svg/account-clock.svg?raw';\nimport AccountGroupSvg from '@mdi/svg/svg/account-group.svg?raw';\nimport AccountSvg from '@mdi/svg/svg/account.svg?raw';\nimport DeleteSvg from '@mdi/svg/svg/delete.svg?raw';\nimport LinkSvg from '@mdi/svg/svg/link.svg?raw';\nimport AccountPlusSvg from '@mdi/svg/svg/account-plus.svg?raw';\nimport { getContents } from '../services/SharingService';\nexport const sharesViewId = 'shareoverview';\nexport const sharedWithYouViewId = 'sharingin';\nexport const sharedWithOthersViewId = 'sharingout';\nexport const sharingByLinksViewId = 'sharinglinks';\nexport const deletedSharesViewId = 'deletedshares';\nexport const pendingSharesViewId = 'pendingshares';\nexport default () => {\n    const Navigation = window.OCP.Files.Navigation;\n    Navigation.register({\n        id: sharesViewId,\n        name: t('files_sharing', 'Shares'),\n        caption: t('files_sharing', 'Overview of shared files.'),\n        emptyTitle: t('files_sharing', 'No shares'),\n        emptyCaption: t('files_sharing', 'Files and folders you shared or have been shared with you will show up here'),\n        icon: AccountPlusSvg,\n        order: 20,\n        columns: [],\n        getContents: () => getContents(),\n    });\n    Navigation.register({\n        id: sharedWithYouViewId,\n        name: t('files_sharing', 'Shared with you'),\n        caption: t('files_sharing', 'List of files that are shared with you.'),\n        emptyTitle: t('files_sharing', 'Nothing shared with you yet'),\n        emptyCaption: t('files_sharing', 'Files and folders others shared with you will show up here'),\n        icon: AccountSvg,\n        order: 1,\n        parent: sharesViewId,\n        columns: [],\n        getContents: () => getContents(true, false, false, false),\n    });\n    Navigation.register({\n        id: sharedWithOthersViewId,\n        name: t('files_sharing', 'Shared with others'),\n        caption: t('files_sharing', 'List of files that you shared with others.'),\n        emptyTitle: t('files_sharing', 'Nothing shared yet'),\n        emptyCaption: t('files_sharing', 'Files and folders you shared will show up here'),\n        icon: AccountGroupSvg,\n        order: 2,\n        parent: sharesViewId,\n        columns: [],\n        getContents: () => getContents(false, true, false, false),\n    });\n    Navigation.register({\n        id: sharingByLinksViewId,\n        name: t('files_sharing', 'Shared by link'),\n        caption: t('files_sharing', 'List of files that are shared by link.'),\n        emptyTitle: t('files_sharing', 'No shared links'),\n        emptyCaption: t('files_sharing', 'Files and folders you shared by link will show up here'),\n        icon: LinkSvg,\n        order: 3,\n        parent: sharesViewId,\n        columns: [],\n        getContents: () => getContents(false, true, false, false, [window.OC.Share.SHARE_TYPE_LINK]),\n    });\n    Navigation.register({\n        id: deletedSharesViewId,\n        name: t('files_sharing', 'Deleted shares'),\n        caption: t('files_sharing', 'List of shares you left.'),\n        emptyTitle: t('files_sharing', 'No deleted shares'),\n        emptyCaption: t('files_sharing', 'Shares you have left will show up here'),\n        icon: DeleteSvg,\n        order: 4,\n        parent: sharesViewId,\n        columns: [],\n        getContents: () => getContents(false, false, false, true),\n    });\n    Navigation.register({\n        id: pendingSharesViewId,\n        name: t('files_sharing', 'Pending shares'),\n        caption: t('files_sharing', 'List of unapproved shares.'),\n        emptyTitle: t('files_sharing', 'No pending shares'),\n        emptyCaption: t('files_sharing', 'Shares you have received but not approved will show up here'),\n        icon: AccountClockSvg,\n        order: 5,\n        parent: sharesViewId,\n        columns: [],\n        getContents: () => getContents(false, false, true, false),\n    });\n};\n","/**\n * @copyright Copyright (c) 2022 John Molakvoæ <skjnldsv@protonmail.com>\n *\n * @author John Molakvoæ <skjnldsv@protonmail.com>\n *\n * @license AGPL-3.0-or-later\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n *\n */\nimport { getLoggerBuilder } from '@nextcloud/logger'\n\nexport default getLoggerBuilder()\n\t.setApp('files')\n\t.detectUser()\n\t.build()\n","import { emit } from '@nextcloud/event-bus';\nimport { generateOcsUrl } from '@nextcloud/router';\nimport { translatePlural as n } from '@nextcloud/l10n';\nimport axios from '@nextcloud/axios';\nimport CheckSvg from '@mdi/svg/svg/check.svg?raw';\nimport { FileAction, registerFileAction } from '../../../files/src/services/FileAction';\nimport { pendingSharesViewId } from '../views/shares';\nexport const action = new FileAction({\n    id: 'accept-share',\n    displayName: (nodes) => n('files_sharing', 'Accept share', 'Accept shares', nodes.length),\n    iconSvgInline: () => CheckSvg,\n    enabled: (nodes, view) => nodes.length > 0 && view.id === pendingSharesViewId,\n    async exec(node) {\n        try {\n            const isRemote = !!node.attributes.remote;\n            const url = generateOcsUrl('apps/files_sharing/api/v1/{shareBase}/pending/{id}', {\n                shareBase: isRemote ? 'remote_shares' : 'shares',\n                id: node.attributes.id,\n            });\n            await axios.post(url);\n            // Remove from current view\n            emit('files:node:deleted', node);\n            return true;\n        }\n        catch (error) {\n            return false;\n        }\n    },\n    async execBatch(nodes, view, dir) {\n        return Promise.all(nodes.map(node => this.exec(node, view, dir)));\n    },\n    order: 1,\n    inline: () => true,\n});\nregisterFileAction(action);\n","/**\n * @copyright Copyright (c) 2023 John Molakvoæ <skjnldsv@protonmail.com>\n *\n * @author John Molakvoæ <skjnldsv@protonmail.com>\n *\n * @license AGPL-3.0-or-later\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n *\n */\nimport { translate as t } from '@nextcloud/l10n';\nimport { registerFileAction, FileAction, DefaultType } from '../../../files/src/services/FileAction';\nimport { sharesViewId, sharedWithYouViewId, sharedWithOthersViewId, sharingByLinksViewId } from '../views/shares';\nexport const action = new FileAction({\n    id: 'open-in-files',\n    displayName: () => t('files', 'Open in Files'),\n    iconSvgInline: () => '',\n    enabled: (nodes, view) => [\n        sharesViewId,\n        sharedWithYouViewId,\n        sharedWithOthersViewId,\n        sharingByLinksViewId,\n        // Deleted and pending shares are not\n        // accessible in the files app.\n    ].includes(view.id),\n    async exec(node) {\n        window.OCP.Files.Router.goToRoute(null, // use default route\n        { view: 'files', fileid: node.fileid }, { dir: node.dirname });\n        return null;\n    },\n    // Before openFolderAction\n    order: -1000,\n    default: DefaultType.HIDDEN,\n});\nregisterFileAction(action);\n","import { emit } from '@nextcloud/event-bus';\nimport { generateOcsUrl } from '@nextcloud/router';\nimport { translatePlural as n } from '@nextcloud/l10n';\nimport axios from '@nextcloud/axios';\nimport CloseSvg from '@mdi/svg/svg/close.svg?raw';\nimport { FileAction, registerFileAction } from '../../../files/src/services/FileAction';\nimport { pendingSharesViewId } from '../views/shares';\nexport const action = new FileAction({\n    id: 'reject-share',\n    displayName: (nodes) => n('files_sharing', 'Reject share', 'Reject shares', nodes.length),\n    iconSvgInline: () => CloseSvg,\n    enabled: (nodes, view) => {\n        if (view.id !== pendingSharesViewId) {\n            return false;\n        }\n        if (nodes.length === 0) {\n            return false;\n        }\n        // disable rejecting group shares from the pending list because they anyway\n        // land back into that same list after rejecting them\n        if (nodes.some(node => node.attributes.remote_id\n            && node.attributes.share_type === window.OC.Share.SHARE_TYPE_REMOTE_GROUP)) {\n            return false;\n        }\n        return true;\n    },\n    async exec(node) {\n        try {\n            const isRemote = !!node.attributes.remote;\n            const url = generateOcsUrl('apps/files_sharing/api/v1/{shareBase}/{id}', {\n                shareBase: isRemote ? 'remote_shares' : 'shares',\n                id: node.attributes.id,\n            });\n            await axios.delete(url);\n            // Remove from current view\n            emit('files:node:deleted', node);\n            return true;\n        }\n        catch (error) {\n            return false;\n        }\n    },\n    async execBatch(nodes, view, dir) {\n        return Promise.all(nodes.map(node => this.exec(node, view, dir)));\n    },\n    order: 2,\n    inline: () => true,\n});\nregisterFileAction(action);\n","import { emit } from '@nextcloud/event-bus';\nimport { generateOcsUrl } from '@nextcloud/router';\nimport { translatePlural as n } from '@nextcloud/l10n';\nimport axios from '@nextcloud/axios';\nimport ArrowULeftTopSvg from '@mdi/svg/svg/arrow-u-left-top.svg?raw';\nimport { FileAction, registerFileAction } from '../../../files/src/services/FileAction';\nimport { deletedSharesViewId } from '../views/shares';\nexport const action = new FileAction({\n    id: 'restore-share',\n    displayName: (nodes) => n('files_sharing', 'Restore share', 'Restore shares', nodes.length),\n    iconSvgInline: () => ArrowULeftTopSvg,\n    enabled: (nodes, view) => nodes.length > 0 && view.id === deletedSharesViewId,\n    async exec(node) {\n        try {\n            const url = generateOcsUrl('apps/files_sharing/api/v1/deletedshares/{id}', {\n                id: node.attributes.id,\n            });\n            await axios.post(url);\n            // Remove from current view\n            emit('files:node:deleted', node);\n            return true;\n        }\n        catch (error) {\n            return false;\n        }\n    },\n    async execBatch(nodes, view, dir) {\n        return Promise.all(nodes.map(node => this.exec(node, view, dir)));\n    },\n    order: 1,\n    inline: () => true,\n});\nregisterFileAction(action);\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = function(module) {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","__webpack_require__.j = 6691;","__webpack_require__.b = document.baseURI || self.location.href;\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t6691: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunknextcloud\"] = self[\"webpackChunknextcloud\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","__webpack_require__.nc = undefined;","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [7874], function() { return __webpack_require__(31211); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["deferred","e","setApp","build","setUid","uid","o","NONE","CREATE","READ","UPDATE","DELETE","SHARE","ALL","w","Folder","File","E","t","match","v","id","Error","source","URL","startsWith","mtime","Date","crtime","mime","size","permissions","owner","attributes","root","includes","r","b","_data","_attributes","_knownDavService","constructor","this","n","set","s","i","D","updateMtime","Reflect","deleteProperty","Proxy","replace","basename","extension","dirname","indexOf","slice","length","pathname","isDavRessource","split","pop","path","fileid","move","rename","q","type","C","super","I","getLoggerBuilder","detectUser","_regeneratorRuntime","exports","Op","Object","prototype","hasOwn","hasOwnProperty","defineProperty","obj","key","desc","value","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","invoke","resolve","reject","record","result","_typeof","__await","then","unwrapped","error","previousPromise","callInvokeWithMethodAndArg","state","undefined","done","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","methodName","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","doneResult","displayName","isGeneratorFunction","genFun","ctor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","skipTempReset","prev","charAt","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","asyncGeneratorStep","gen","_next","_throw","ownKeys","enumerableOnly","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","apply","_objectSpread","target","arguments","_defineProperty","getOwnPropertyDescriptors","defineProperties","input","hint","prim","toPrimitive","res","String","_toPrimitive","_toPropertyKey","DefaultType","rootPath","concat","_getCurrentUser","getCurrentUser","headers","ocsEntryToNode","ocsEntry","_ocsEntry$tags","isFolder","item_type","hasPreview","has_preview","Node","file_source","file_target","generateRemoteUrl","replaceAll","item_mtime","stime","uid_owner","mimetype","item_size","item_permissions","favorite","tags","window","OC","TAG_FAVORITE","logger","getShares","shared_with_me","url","generateOcsUrl","axios","get","params","include_tags","getPendingShares","getRemotePendingShares","getDeletedShares","getContents","_ref","_callee","_getCurrentUser2","sharedWithOthers","pendingShares","deletedshares","filterTypes","promises","responses","data","contents","_args","_context","all","map","response","ocs","flat","node","_node$attributes","share_type","folder","args","sharesViewId","sharedWithYouViewId","sharedWithOthersViewId","sharingByLinksViewId","deletedSharesViewId","pendingSharesViewId","FileAction","action","_classCallCheck","validateAction","_action","iconSvgInline","enabled","exec","execBatch","order","default","inline","renderInline","registerFileAction","_nc_fileactions","debug","find","search","_asyncToGenerator","nodes","view","isRemote","remote","shareBase","post","emit","t0","dir","_this","_callee2","_context2","Navigation","OCP","Files","Router","goToRoute","HIDDEN","some","remote_id","Share","SHARE_TYPE_REMOTE_GROUP","delete","register","caption","emptyTitle","emptyCaption","icon","columns","parent","SHARE_TYPE_LINK","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","module","loaded","__webpack_modules__","m","O","chunkIds","priority","notFulfilled","Infinity","fulfilled","j","every","splice","getter","__esModule","d","a","definition","g","globalThis","Function","prop","nmd","paths","children","document","baseURI","location","href","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","chunkLoadingGlobal","bind","nc","__webpack_exports__"],"sourceRoot":""}